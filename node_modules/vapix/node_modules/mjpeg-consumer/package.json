{
  "name": "mjpeg-consumer",
  "version": "0.2.0",
  "description": "a nodejs stream implementation that consumes http mjpeg streams",
  "main": "index.js",
  "dependencies": {
    "buffertools": "~1.1.0"
  },
  "devDependencies": {
    "request": "~2.12.0",
    "file-on-write": "~0.1.0"
  },
  "scripts": {
    "test": "echo \"Error: no test specified\" && exit 1"
  },
  "repository": {
    "type": "git",
    "url": "https://github.com/mmaelzer/mjpeg-consumer"
  },
  "author": {
    "name": "Mike Maelzer",
    "email": "mmaelzer@gmail.com"
  },
  "license": "BSD",
  "keywords": [
    "mjpg",
    "mjpeg",
    "motion jpeg",
    "stream",
    "http",
    "ip camera"
  ],
  "readme": "mjpeg-consumer\r\n==================\r\n  \r\nA node.js stream implementation that consumes http mjpeg streams and emits jpegs.\r\n  \r\n###Install###\r\n\r\n\tnpm install mjpeg-consumer\r\n  \r\n----------------------  \r\n\r\n###Objects###\r\nRequiring the `mjpeg-consumer` module returns a readable/writable stream implementation that takes an http stream of mjpegs and emits jpegs.\r\n\r\n\tvar MjpegConsumer = require(\"mjpeg-consumer\");\r\n\tvar consumer = new MjpegConsumer();\r\n\r\n----------------------  \r\n###Usage###\r\nThe `mjpeg-consumer` isn't very useful without a writable pipe to pipe jpegs to. I've built the [file-on-write](https://github.com/mmaelzer/file-on-write) stream to write a file every time `write` is called on it. The below example opens a stream to an IP camera, pipes the results to the `mjpeg-consumer` which processes the stream and emits parsed jpegs to the `file-on-write` writer.\r\n\r\n\tvar request = require(\"request\");\r\n\tvar MjpegConsumer = require(\"mjpeg-consumer\");\r\n\tvar FileOnWrite = require(\"file-on-write\");\r\n\r\n\tvar writer = new FileOnWrite({ \r\n\t\tpath: './video',\r\n\t\text: '.jpg'\r\n\t});\r\n\tvar consumer = new MjpegConsumer();\r\n\r\n\trequest(\"http://192.168.1.2/videostream.cgi\").pipe(consumer).pipe(shedder).pipe(writer);",
  "readmeFilename": "README.md",
  "bugs": {
    "url": "https://github.com/mmaelzer/mjpeg-consumer/issues"
  },
  "_id": "mjpeg-consumer@0.2.0",
  "_from": "mjpeg-consumer@0.2.0"
}
